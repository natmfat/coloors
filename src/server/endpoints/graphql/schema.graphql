type User {
  id: ID!
  name: String!
  email: String!
  palettes: [Palette!]!
  token: String
}

type Palette {
  id: ID!
  author: User!
  forks: Int!
  colors: String!
}

type Query {
  getAllPalettes: [Palette!]!
  getUser: User!

  loginUser(email: String!, password: String!): User!
  logoutUser: String!
}

type Mutation {
  createUser(name: String!, email: String!, password: String!): User!
  createPalette(colors: String!): Palette!

  updatePalette(id: ID!, colors: String!): [String!]!
  incrementFork(id: ID!): String!
  deletePalette(id: ID!): String!
}
